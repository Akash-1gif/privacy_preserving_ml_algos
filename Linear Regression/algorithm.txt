1. enc_X_train -> encrypted row wise
2. enc_y_train -> encrypted row wise

n_samples=len(enc_y_train)
n_features=len(X_train[0])
weights=np.zeros(n_features) -> decrypt for fhe/manipulate for phe 
bias=0
lr=0.01
n_iters=1000

for _ in range(n_iters):
    y_pred=[]
    for i in range(n_samples):
        p=enc_X_train[i].dot(weights)
        p=p+bias
        y_pred.append(p)

        res=[]
        for i,j in zip(y_pred,enc_y_train):
            p=i-j # paillier: p=i+(-1*(j))
            res.append(p)

        enc_x_train_1=[]
        ptsd=list(np.zeros(n_features))
        for i in enc_X_train:
            p=i*weights
            ptsd=ptsd+p

        dw=1/n_samples*ptsd

        weights=weights-lr*dw

        y_sum=0
        for i in y_pred:
            y_sum=y_sum+i

        db=y_sum*(1/n_samples)
        bias=bias-(lr*db)

        
